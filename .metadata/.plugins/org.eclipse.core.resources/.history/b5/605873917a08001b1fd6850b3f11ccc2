package LinkedList;

import java.util.Scanner;

public class LLUse {
	public static DoubleNode<Integer> sorting(DoubleNode<Integer> head) {
        //Your Code Goes Here
        if(head == null)
        {
            return head;
        }
        
        DoubleNode<Integer> head2 = null;
        while(head.next != null)
        {
            if(head.data >= head.next.data)
            {
                head2 = new DoubleNode<>(head.next.data);
                head.next = null;
            }
        }
        return head;
	}
	
	public static Node<Integer> clone(Node<Integer> head) {
        //Your code goes here
        Node<Integer> copyHead = null;
        Node<Integer> copyTail = null;
        Node<Integer> temp = head;
        
        
        while(head != null)
        {
            if(copyHead == null)
            {
                copyHead = new Node<>(head.data);
                copyTail = copyHead;
                copyTail.next = head.next;
                head.next = copyTail;
            }
            else
            {
            	copyTail = new Node<>(head.data);
            	copyTail.next = head.next;
                head.next = copyTail;
            }
            head = copyTail.next;
        }
        return temp;
	}
	
	public static DoubleNode<Integer> reverse(Node<Integer> head)
    {
        DoubleNode<Integer> ans;
        if(head == null || head.next == null)
        {
            ans = new DoubleNode<>(head, head);
            return ans;
        }
        DoubleNode<Integer> smallAns = reverse(head.next);
        smallAns.tail.next = head;
        head.next = null;
        ans = new DoubleNode<>(smallAns.head, head);
        return ans;
    }
	
	public static void print(Node<Integer> head)
	{
		Node<Integer> temp = head;
		while(temp != null)
		{
			System.out.print(temp.data + " ");
			temp = temp.next;
		}
		System.out.println();
	}
	
	public static Node<Integer> takeInput(){
		Scanner s = new Scanner(System.in);
		int data = s.nextInt();
		Node<Integer> head = null, tail = null;
		while(data != -1)
		{
			Node<Integer> currentNode = new Node<>(data);
			if(head == null)
			{
				head = currentNode;
				tail = currentNode;
			}
			else
			{
				tail.next = currentNode;
				tail = currentNode;
			}
			data = s.nextInt();
		}
		return head;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Node<Integer> head = takeInput();
		head = clone(head);
		print(head);
		
		
		
//		DoubleNode<Integer> ans = reverse(head);
//		print(ans.head);	
	}
}
