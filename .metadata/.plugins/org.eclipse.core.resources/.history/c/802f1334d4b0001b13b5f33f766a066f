package Ques;

import java.util.*;

public class evaluate {
	// helper
	public static int priority(char op) {
		if(op == '/' || op == '*') return 2;
		else if(op == '+' || op == '-') return 1;
		else return 0;
	}
	
	public static int evaluate(int val1, int val2, char op) {
		if(op == '*') {
			return val1 * val2;
		}else if(op == '/') {
			return val1 / val2;
		}else if(op == '+') {
			return val1 + val2;
		}else if(op == '-') {
			return val1 - val2;
		}else {
			return 0;
		}
	}
    // infix
    public static int infixEvaluation(String str) {
    	Stack<Character> operatorSt = new Stack<>();
    	Stack<Integer> valueSt = new Stack<>();
    	
    	for(int i = 0; i < str.length(); i++) {
    		char ch = str.charAt(i);
    		if(ch == ' ') continue;
    		else if(ch == '(') operatorSt.push(ch);
    		else if()
    	}
    }

    public static void infixToPrefix(String str) {

    }

    public static void infixToPostfix(String str) {

    }

    // prefix
    public static int prefixEvaluation(String str) {

    }

    public static void prefixToInfix(String str) {

    }

    public static void prefixToPostfix(String str) {

    }

    // postfix
    public static int postfixEvaluation(String str) {

    }

    public static void postfixToPrefix(String str) {

    }

    public static void postixToinfix(String str) {

    }
    
    public static void evaluation() {
        String str = "";

    }
    
    public static void main(String[] args) {
        evaluation();    
    }
}
